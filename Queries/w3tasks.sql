/**
  Display all tables individually
     SELECT * FROM CUSTOMERS ; -- and so on
 */
-- 1. FIND OUT THE CUSTOMER COUNT FOR EACH COUNTRY
SELECT COUNTRY,COUNT(CUSTOMERID)
FROM CUSTOMERS
    GROUP BY COUNTRY;

SELECT COUNTRY,COUNT(COUNTRY) AS Customer_Count
FROM CUSTOMERS
GROUP BY COUNTRY;


-- 2. FIND OUT ANY EMPLOYEES WITH BA DEGREES (BY CHECKING NOTES CONTAINING BA )
SELECT EMPLOYEES.FIRST_NAME||' '||EMPLOYEES.LAST_NAME AS Full_Name
FROM EMPLOYEES
WHERE NOTES LIKE '% BA %';




-- 3. FIND OUT CUSTOMER NAME AND OrderID  Using the Orders and Customers table
SELECT C.CustomerName, O.OrderID
FROM CUSTOMERS C
         INNER JOIN ORDERS O
             ON C.CustomerID=O.CustomerID;



-- 4. FIND OUT CUSTOMER NAME AND OrderID  Using the Orders and Customers table
-- CONTINUE TO FIND OUT THE EMPLOYEE NAME  USING EmployeeID
SELECT ORDERS.OrderID ,CUSTOMERS.CustomerName, EMPLOYEES.FIRST_NAME||' '||EMPLOYEES.LAST_NAME
FROM ORDERS
         INNER JOIN CUSTOMERS ON CUSTOMERS.CustomerID = ORDERS.CustomerID
         INNER JOIN EMPLOYEES  ON ORDERS.EMPLOYEEID =EMPLOYEES.EMPLOYEE_ID;

SELECT C.CUSTOMERNAME , O.ORDERID , FIRST_NAME ||' '|| LAST_NAME AS FULL_NAME
FROM EMPLOYEES E
    INNER JOIN ORDERS O ON E.EMPLOYEE_ID = O.EMPLOYEEID
INNER JOIN CUSTOMERS C ON E.EMPLOYEE_ID = C.CUSTOMERID;

SELECT FIRST_NAME||' '||LAST_NAME AS Full_Name, O.OrderID
FROM EMPLOYEES E
         INNER JOIN ORDERS O ON E.EMPLOYEE_ID=O.EmployeeID;

SELECT FirstName||' '||LastName AS Full_Name, O.OrderID
FROM EMPLOYEES E
         INNER JOIN ORDERS O ON E.EmployeeID=O.EmployeeID;





-- 5. Find out OrderDetailID and ProductName using the OrderDetails
-- table and Products table
-- they are related by ProductID
SELECT ORDERDETAILS.ORDERDETAILID , PRODUCTS.PRODUCTNAME
FROM ORDERDETAILS
    INNER JOIN PRODUCTS
        ON ORDERDETAILS.PRODUCTID = PRODUCTS.PRODUCTID;

SELECT OrderDetailID, P.ProductName
FROM ORDERDETAILS O
         INNER JOIN PRODUCTS P ON O.ProductID=P.ProductID;




-- OPTIONAL TASKS ORDERDETAILS
--O1. FIND OUT HOW MANY ORDERS EACH CUSTOMER MADE,
-- INCLUDING THOSE CUSTOMERS WHO MADE NO ORDER




         SELECT CustomerName, COUNT(O.CustomerID) AS NUMBER_OF_ORDERS
FROM CUSTOMERS C
    LEFT OUTER JOIN ORDERS O
        ON C.CustomerID=O.CustomerID
GROUP BY CustomerName;




SELECT  COUNT(ORDERID),CUSTOMERNAME  ---- NOT WORKING
FROM ORDERDETAILS
INNER JOIN ORDERS
 ON ORDERDETAILS.ORDERID = ORDERS.ORDERID
INNER JOIN CUSTOMERS
ON ORDERS.CUSTOMERID = CUSTOMERS.CUSTOMERID
    GROUP BY CUSTOMERNAME;


--O2. FIND OUT COUNT OF PRODUCTS FOR EACH ORDER FROM OrderDetails table
SELECT  COUNT(PRODUCTID),ORDERID
FROM ORDERDETAILS
    GROUP BY ORDERID;

SELECT O.OrderID, COUNT(OD.ProductID) AS ProductQuantity
FROM ORDERS O
         LEFT OUTER JOIN ORDERDETAILS OD ON O.OrderID = OD.OrderID
GROUP BY O.OrderID;



--O3. FIND OUT EMPLOYEE FirstName and Count of ORDER they processed
-- including those employees did not process any order (Adam)
SELECT FIRST_NAME,  COUNT(O.EMPLOYEEID) AS NUMBER_OF_ORDERS
FROM EMPLOYEES E
         LEFT OUTER JOIN ORDERS O ON E.EMPLOYEE_ID=O.EMPLOYEEID
GROUP BY FIRST_NAME;

--O4. Find out How much each ORDER COST - SUM OF
-- ALL PRODUCT PRICE IN ORDER DETAILS FOR EACH ORDER



SELECT ORDERID ,SUM (P.PRICE * O.QUANTITY)
FROM ORDERDETAILS O
INNER JOIN PRODUCTS P ON O.PRODUCTID = P.PRODUCTID;
    GROUP BY ORDERID;

SELECT OrderID, COUNT(O.ProductID) AS ORDER_QUANTITY, ROUND(SUM(P.Price*O.Quantity),2) AS TOTAL_PRICE_FOR_EACH_ORDER
FROM ORDERDETAILS O
         INNER JOIN PRODUCTS P ON O.PRODUCTID = P.PRODUCTID
GROUP BY OrderID ;


/**
  -- FIND OUT HOW MUCH EACH ORDER COST
-- EACH ORDER CONSISTS OF MULTIPLE LINE ITEMS CAN BE FOUND IN ORDER DETAILS TABLE
-- ONE PRODUCT PRICE IN ORDER DETAIL IS calculated using  QUANNTITY*PRICE(from PRODUCTS table)
-- ONCE you find out how much each line items costs , now you can sum them up using SUM
-- The question asked for each order , so group by ORDERID
 */
SELECT oe.OrderID , SUM(oe.Quantity * p.Price) AS ORDER_COST
FROM OrderDetails oe
         INNER JOIN Products p ON p.ProductID = oe.ProductID
GROUP BY oe.OrderID;

---- PART 1

-- CUSTOMERS TABLE
-- 1.	Display CUSTOMERNAME AND ADDRESS IF CONTACTNAME is Pedro Afonso
Select CustomerName, Address
From Customers
where ContactName = 'Pedro Afonso';


-- 2.	Display CUSTOMERS FullAddress(alias) in below format by concatenating
-- 3.	ADDRESS , CITY , POSTALCODE, COUNTRY
SELECT CUSTOMERNAME , ADDRESS ||','||CITY||','||POSTALCODE||','||COUNTRY AS FullAddress
FROM CUSTOMERS;




-- 4.	Display CUSTOMERS THAT DOES NOT HAVE POSTALCODE
SELECT customerName
FROM CUSTOMERS
WHERE POSTALCODE IS NULL ;


select customerName
from Customers
where length(postalCode) =  0;





-- 5.	Display all CUSTOMERS with POSTALCODE contains space or -
SELECT *
FROM CUSTOMERS
WHERE POSTALCODE LIKE '% %' OR POSTALCODE LIKE '%-%';




-- 6.	Display CUSTOMERS with ID between 10-25
SELECT CUSTOMERNAME
FROM CUSTOMERS
WHERE CUSTOMERID BETWEEN 10 AND 25;


-- 7.	Display CUSTOMERS if address ends with Rd. Blvd. or Road
SELECT CUSTOMERNAME
FROM CUSTOMERS
WHERE ADDRESS LIKE '%Rd.' OR ADDRESS LIKE '% Blvd.' OR ADDRESS LIKE '%Road';


--8
-- a.	GET THE COUNT OF ABOVE RESULT WITH COUNT(*)
-- 8.	Display All Customers in UK , US if POSTALCODE is not WX3 6FW, 97403
SELECT COUNT(*)
FROM CUSTOMERS
WHERE COUNTRY IN ('UK','USA')
AND  POSTALCODE NOT LIKE '%WX3%' AND POSTALCODE NOT LIKE '%6FW%' AND POSTALCODE NOT LIKE '%97403%';

SELECT *
FROM Customers
Where Country in ('USA','UK')
  And PostalCode Not Like '%WX3%' and PostalCode Not Like '%6FW%' and PostalCode Not Like '%97403%';


-- 9.	Display CUSTOMERS Count in CITY Of LONDON
SELECT COUNT(CITY)
FROM CUSTOMERS
WHERE CITY = 'LONDON';

SELECT City, Count(*)
FROM Customers
Group By City
Having City = 'London';


-- 10.	Display CUSTOMERS Count for EACH CITY
SELECT CITY
FROM CUSTOMERS
GROUP BY CITY;
--select city,customername from customers group by city =====> WHY


-- 11.	Display CUSTOMERS Count for EACH COUNTRY
SELECT COUNTRY
FROM CUSTOMERS
GROUP BY COUNTRY;

-- 12.	Display CUSTOMERS Count for EACH COUNTRY



-- 13.	Filter the result only display if Count is more than 5
SELECT COUNTRY
FROM CUSTOMERS
GROUP BY COUNTRY
HAVING COUNT(*) > 5;

Select Country, count(*) as Count
From Customers
Group By Country
having count(*) > 5;

select country, count(country)
from customers
group by country
having count(country)> 5;

-- CATEGORIES TABLE
-- 14.	Display All Categories contains 'es' in Description excluding coffees
SELECT *
FROM CATEGORIES
WHERE DESCRIPTION LIKE '%es%' AND  DESCRIPTION NOT  LIKE 'coffees';


-- 15.	Display CATEGORYNAME with ID of 1, 5 , 7
SELECT CATEGORYID,CATEGORYNAME
FROM CATEGORIES
WHERE  CATEGORYID IN (1,5,7);

-- 16.	Display CATEGORYNAME and LENGTH of DESCRIPTION
SELECT CATEGORYNAME, LENGTH(DESCRIPTION)
FROM CATEGORIES;

-- 17.	 Display MAX(LENGTH(DESCRIPTION))
SELECT MAX(LENGTH(DESCRIPTION))
FROM CATEGORIES;

--select max(length(description) ), categoryname from categories ===> WHY

---- PART 2

-- EMPLOYEES TABLE (NOT FROM HR)

-- 18. Display All Employees with BA Degree (contains BA in NOTES)
-- 19. Display youngest Employee Birthday

-- ORDERS TABLE

-- 20. Display All orders processed by Employee with EmployeeID 5,3
SELECT ORDERID,EMPLOYEEID
FROM ORDERS
WHERE EMPLOYEEID IN (5,3);

SELECT *
FROM ORDERS
WHERE EMPLOYEEID IN (5,3);



-- 21. Display All orders made by Customer with CustomerID between 70-80
SELECT *
FROM ORDERS
WHERE CUSTOMERID BETWEEN 70 AND 80 ;


-- 22. Display All orders shipped by Shipper with ShipperID 3
SELECT ORDERID,SHIPPERNAME
FROM ORDERS
INNER JOIN SHIPPERS
ON ORDERS.SHIPPERID = SHIPPERS.SHIPPERID
WHERE ORDERS.SHIPPERID =3 ;


SELECT ORDERID,SHIPPERNAME
FROM SHIPPERS
    INNER JOIN ORDERS
        ON SHIPPERS.SHIPPERID= ORDERS.SHIPPERID;

SELECT ORDERID, SHIPPERNAME
from ORDERS O
  INNER JOIN  SHIPPERS S  on O.SHIPPERID = S.SHIPPERID
where O.SHIPPERID = 3;


-- 23. Display Count of Distinct CustomerId to show
-- how many unique customers made these orders
SELECT ORDERID , COUNT(DISTINCT CUSTOMERID) AS CUSTOMER_ID
FROM ORDERS
GROUP BY ORDERID;




-- 24. OPTIONAL : Display Orders made before 1996-07-10
-- USE WHERE ORDER_DATE < TO_DATE('1996-07-10','YYY-MM--DD')
SELECT ORDERID
FROM ORDERS
WHERE ORDERDATE < TO_DATE('1996-07-19','YYYY-MM-DD');




-- ORDERDETAILS TABLE
-- 25. Display All orderdetails for ORDER with ORDERID 10255
SELECT *
FROM ORDERDETAILS
WHERE ORDERID = 10255;



-- 26. Display COUNT OF orderdetails for ORDER with ORDERID 10255
SELECT COUNT(*)
FROM ORDERDETAILS
WHERE ORDERID = 10255;

SELECT COUNT(ORDERID)
FROM ORDERDETAILS
WHERE ORDERID = 10255;


-- 27. Display COUNT of orderdetails for EACH ORDER
SELECT ORDERID,COUNT(ORDERDETAILID)
FROM ORDERDETAILS
GROUP BY ORDERID;

-- 29. Display QUANTITY for orderdetails with id 21
SELECT QUANTITY
FROM ORDERDETAILS
WHERE ORDERDETAILID = 21 ;



-- 30. Display SUM OF ALL QUANTITY for ORDER with ORDERID 10255
SELECT SUM(QUANTITY)
FROM ORDERDETAILS
WHERE ORDERID = 10255;


-- 31. Display SUM OF ALL QUANTITY for EACH ORDER (Group by ORRDERID)

SELECT ORDERID, SUM(QUANTITY)
FROM ORDERDETAILS
GROUP BY ORDERID;



-- 32. Display All OrderDetails if PRODUCTID is 76
SELECT *
FROM ORDERDETAILS
WHERE PRODUCTID = 76 ;




-- 33. Display the COUNT of OrderDetails if PRODUCTID is 76
SELECT COUNT(ORDERDETAILID)
FROM ORDERDETAILS
WHERE PRODUCTID =76;


---34. Display the SUM of QUANTITY if PRODUCTID is 76
SELECT SUM(QUANTITY)
FROM ORDERDETAILS
WHERE PRODUCTID = 76;

---35. Display the SUM of QUANTITY for EACH PRODUCTID
SELECT PRODUCTID,SUM(QUANTITY)
FROM ORDERDETAILS
GROUP BY PRODUCTID;
---- PART 3
--- PRODUCTS TABLE
-- 35. Display all PRODUCTS if SupplierID is 7
-- 36. Display all PRRODUCTS if Name starts with Uncle or Grandma
-- 37. Display all PRRODUCTS if CategoryID 2, 4, 6
-- 38. Display the Count of PRRODUCTS in category 8
-- 39. Display Max price
-- 40. Display Max price in each Category
-- 41. Display Max price for all products that SupplierID is more than 10

--- SUPPLIERS TABLE
-- 42. Display all SUPPLIERS Name for ID 2, 5, 17, 20
-- 43. Display all SUPPLIERS in USA, Germany, France , excluding one in CITY Berlin
-- 44. Display all SUPPLIERS count in each COUNTRY
-- 45. Filter above result to show only if the count is more than 4
-- 46. Display the count of SUPPLIERS if phone number does not starts with (

-- SHIPPERS TABLE
-- 47. Find the name and phone number of SHIPPER with ID 2